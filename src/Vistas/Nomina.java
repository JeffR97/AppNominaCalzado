package Vistas;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author jeff_
 */
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

import crud_Taller.conexion;
import java.awt.Image;//librerias para cambiar la imagen de icono
import java.awt.Toolkit; //librerias para cambiar la imagen de icono
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;

public class Nomina extends javax.swing.JFrame {

    conexion con1 = new conexion();
    Connection conect;
    DefaultTableModel modelo;
    Statement st;
    ResultSet rs;
    String seleccion;
    int pares, valor, resultado, deduccion, Tfabricado;
    double salarioN;

    public Nomina() {
        initComponents();
        actualizarFecha();
        rellenarCB();
        consultarNom();
        setSize(920, 700);
        setResizable(false);
        setTitle("Nomina");
        setLocationRelativeTo(null);
    }
    
    /**
     *
     * @return
     */
    @Override
    public Image getIconImage(){
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Vistas/logo-Zapato.jpg"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void actualizarFecha() {
        LocalDateTime ahora = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd ");
        String fechaTexto = ahora.format(formatter);
        txtFecha.setText(fechaTexto);
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbEmple = new javax.swing.JComboBox<>();
        txtValD = new javax.swing.JTextField();
        txtCantP = new javax.swing.JTextField();
        txtValPar = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAResult = new javax.swing.JTextArea();
        btnCalcu = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        txtFecha = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableNom = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuPres = new javax.swing.JMenu();
        MenuEmple = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());

        jScrollPane3.setBackground(new java.awt.Color(255, 215, 0));
        jScrollPane3.setBorder(null);
        jScrollPane3.setPreferredSize(new java.awt.Dimension(500, 500));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setAutoscrolls(true);
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setPreferredSize(new java.awt.Dimension(900, 1200));

        jLabel1.setFont(new java.awt.Font("Arial Black", 2, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 0));
        jLabel1.setText("Calculo de Nomina");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Seleccione Empleado:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Valor de deducción:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Cantidad de pares:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Valor del par:");

        cbEmple.setBackground(new java.awt.Color(204, 204, 204));
        cbEmple.setForeground(new java.awt.Color(0, 0, 0));
        cbEmple.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        txtValD.setBackground(new java.awt.Color(204, 204, 204));
        txtValD.setForeground(new java.awt.Color(0, 0, 0));
        txtValD.setText("0");

        txtCantP.setBackground(new java.awt.Color(204, 204, 204));
        txtCantP.setForeground(new java.awt.Color(0, 0, 0));
        txtCantP.setText("0");

        txtValPar.setBackground(new java.awt.Color(204, 204, 204));
        txtValPar.setForeground(new java.awt.Color(0, 0, 0));
        txtValPar.setText("0");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Fecha:");

        txtAResult.setEditable(false);
        txtAResult.setBackground(new java.awt.Color(204, 204, 204));
        txtAResult.setColumns(20);
        txtAResult.setForeground(new java.awt.Color(0, 0, 0));
        txtAResult.setRows(5);
        txtAResult.setText("    \n\t\t\n\tPresione en el botón calcular para mostrar los datos.");
        jScrollPane1.setViewportView(txtAResult);

        btnCalcu.setBackground(new java.awt.Color(51, 51, 51));
        btnCalcu.setForeground(new java.awt.Color(255, 215, 0));
        btnCalcu.setText("Calcular");
        btnCalcu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCalcu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcuActionPerformed(evt);
            }
        });

        btnGuardar.setBackground(new java.awt.Color(255, 204, 0));
        btnGuardar.setForeground(new java.awt.Color(0, 0, 0));
        btnGuardar.setText("Guardar");
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnNew.setBackground(new java.awt.Color(51, 51, 51));
        btnNew.setForeground(new java.awt.Color(255, 255, 255));
        btnNew.setText("Calculo Nuevo");
        btnNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        txtFecha.setBackground(new java.awt.Color(204, 204, 204));
        txtFecha.setForeground(new java.awt.Color(0, 0, 0));
        txtFecha.setText("0-0-0");

        jTableNom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Deducción", "Fecha de pago", "Valor pagado"
            }
        ));
        jScrollPane2.setViewportView(jTableNom);

        jLabel7.setFont(new java.awt.Font("Arial Black", 2, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 204, 0));
        jLabel7.setText("Tabla de Nomina");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(167, 167, 167)
                                            .addComponent(jLabel4)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtCantP, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(407, 407, 407)
                                            .addComponent(txtValD, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addGap(281, 281, 281)
                                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(240, 240, 240)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel6))
                                        .addGap(38, 38, 38)
                                        .addComponent(cbEmple, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(317, 317, 317)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(130, 130, 130))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(216, 216, 216)
                                            .addComponent(jLabel5)
                                            .addGap(31, 31, 31)
                                            .addComponent(txtValPar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(53, 53, 53)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCalcu, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(348, 348, 348)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbEmple, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtValD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCantP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtValPar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCalcu)
                    .addComponent(jLabel4))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNew)
                        .addGap(42, 42, 42)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(jLabel7)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );

        jScrollPane3.setViewportView(jPanel1);

        jMenuBar1.setBackground(new java.awt.Color(51, 51, 51));
        jMenuBar1.setForeground(new java.awt.Color(255, 255, 255));

        MenuPres.setBackground(new java.awt.Color(102, 102, 102));
        MenuPres.setText("Prestamos");
        MenuPres.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuPresMouseClicked(evt);
            }
        });
        MenuPres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuPresActionPerformed(evt);
            }
        });
        jMenuBar1.add(MenuPres);

        MenuEmple.setBackground(new java.awt.Color(102, 102, 102));
        MenuEmple.setText("Empleados");
        MenuEmple.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuEmpleMouseClicked(evt);
            }
        });
        MenuEmple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuEmpleActionPerformed(evt);
            }
        });
        jMenuBar1.add(MenuEmple);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuPresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuPresActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_MenuPresActionPerformed

    private void MenuEmpleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuEmpleActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_MenuEmpleActionPerformed

    private void MenuPresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuPresMouseClicked
        // TODO add your handling code here:
        PrestamosT vistaPrestamos = new PrestamosT();
        vistaPrestamos.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MenuPresMouseClicked

    private void MenuEmpleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuEmpleMouseClicked
        // TODO add your handling code here:
        Empleados vistaEmpleados = new Empleados();
        vistaEmpleados.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MenuEmpleMouseClicked

    private void btnCalcuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcuActionPerformed
        calcularNom();
    }//GEN-LAST:event_btnCalcuActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        nuevaNom();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        deduccion = Integer.parseInt(txtValD.getText());
        if (deduccion > 0) {
            descontar();
        } else if (deduccion == 0) {
            guardarNom();
            limpiarTablaNom();
            consultarNom();
            nuevaNom();
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Nomina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Nomina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Nomina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Nomina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Nomina().setVisible(true);
            }
        });
    }

    //--------------------------------------------------------------------------------------------------------------
    //metodo para rellenar el combo box con los id de los trabajadores registrados    
    void rellenarCB() {

        try {
            String sql = "SELECT idEmple FROM empleados";
//              String consulta = "SELECT id_empleado FROM empleados";
            conect = con1.getConnection();
            st = conect.createStatement();
            rs = st.executeQuery(sql);
            while (rs.next()) {
                int idEmpleado = rs.getInt("idEmple");
                cbEmple.addItem(Integer.toString(idEmpleado));
            }

        } catch (Exception e) {
            // Manejar la excepción (por ejemplo, imprimir un mensaje de error)
            System.err.println("Error al obtener datos de empleados: " + e.getMessage());
        }
    }

    //--------------------------------------------------------------------------------------------------------------
    //calculos para pagar la nomina
    void calcularNom() {
        seleccion = cbEmple.getSelectedItem().toString();

        pares = Integer.parseInt(txtCantP.getText());
        valor = Integer.parseInt(txtValPar.getText());
        deduccion = Integer.parseInt(txtValD.getText());

        resultado += pares * valor;
        Tfabricado += pares;
        salarioN = resultado - deduccion;

        txtCantP.setText("0");
        txtValPar.setText("0");

        txtAResult.setText("\n                                  Nomina del empleado con documento:  " + seleccion
                + "\n\n    El salario sin deducciones es: " + resultado
                + "\n    Cantidad de pares fabricados: " + Tfabricado
                + "\n    El salario neto a pagar es: " + salarioN);
    }

    //--------------------------------------------------------------------------------------------------------------------------
    void nuevaNom() {
        cbEmple.setSelectedIndex(0);
        txtValD.setText("0");
        txtCantP.setText("0");
        txtValPar.setText("0");
        txtAResult.setText("\n              Presione en el botón calcular para mostrar los datos.");
        seleccion = "";
        resultado = 0;
        Tfabricado = 0;
        salarioN = 0;
        pares = 0;
        valor = 0;
        deduccion = 0;
    }

    //------------------------------------------------------------------------------------------------------------------------------- 
    //guardar nomina
    void guardarNom() {

        if (salarioN < 0) {
            JOptionPane.showMessageDialog(null, "No es posible descontar de nomina, Verifiqué.");
        } else {
            deduccion = Integer.parseInt(txtValD.getText());
            int id = Integer.parseInt(cbEmple.getSelectedItem().toString());
            String fecha = txtFecha.getText();

            try {
                String sqlInsert = "INSERT INTO nominaE (valorDedu,fechaN,totalN,idEmple) values (?,?,?,?)";
                conect = con1.getConnection();
                PreparedStatement pst = conect.prepareStatement(sqlInsert);

                pst.setInt(1, deduccion);
                pst.setString(2, fecha);
                pst.setDouble(3, salarioN);
                pst.setInt(4, id);
                pst.executeUpdate();

                JOptionPane.showMessageDialog(null, "Se guardó la nomina del empleado " + id);

                // Cerrar el ResultSet y el PreparedStatement
                rs.close();
                pst.close();
                // Cerrar la conexión
                conect.close();
            } catch (Exception e) {
                System.out.println("Erro al guardar la nomina" + e.getMessage());//e.getMessage: nos da información del posible error.
            }
        }

    }

//-------------------------------------------------------------------------------------------------------------------------------     
    //metodo para  añadir nomina pagada
    void descontar() {

        String idString = (String) cbEmple.getSelectedItem();
        if (idString.equals("")) {
            JOptionPane.showMessageDialog(null, "Seleccione un empleado");
            return;
        }

        int id = Integer.parseInt(idString);
        String fecha = txtFecha.getText();
        pares = Integer.parseInt(txtCantP.getText());
        valor = Integer.parseInt(txtValPar.getText());
        deduccion = Integer.parseInt(txtValD.getText());

        boolean encontro = false;
        int valorExistente = 0;

        try {
            String sql0 = "SELECT idEmple,valorP FROM prestamos WHERE idemple = ?";
            conect = con1.getConnection();
            PreparedStatement pst = conect.prepareStatement(sql0);
            pst.setInt(1, id);
            rs = pst.executeQuery();
            //rs.next() es un método utilizado en Java cuando se trabaja con ResultSet para interactuar con bases de datos. 
            //ResultSet es una interfaz que representa un conjunto de resultados de una consulta a una base de datos. 
//            El método next() se usa para mover el cursor del ResultSet al siguiente registro.
            while (rs.next()) {
                // Asigna el valor de la columna 'valorP' a 'valorExistente'
                encontro = true;
                valorExistente = rs.getInt("valorP");
            }

            if (encontro) {
                int nuevoValor = valorExistente - deduccion;

                if (nuevoValor < 0) {
                    JOptionPane.showMessageDialog(null, "No se pudo hacer la operación, el valor de deducción es mayor al prestamo.");
                } else if (nuevoValor == 0) {
                    String sqlDel = "DELETE FROM prestamos WHERE idEmple = ?";
                    pst = conect.prepareStatement(sqlDel);
                    pst.setInt(1, id);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "El empreado se elimino de la lista,No tiene deuda");
                    guardarNom();
                    limpiarTablaNom();
                    consultarNom();
                    nuevaNom();
                } else {
                    String sqlUpdate = "UPDATE prestamos SET fecha = ?,valorP = ? WHERE idEmple = ?";
                    pst = conect.prepareStatement(sqlUpdate);
                    pst.setString(1, fecha);
                    pst.setInt(2, nuevoValor);
                    pst.setInt(3, id);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Préstamo Actualizado");
                    guardarNom();
                    limpiarTablaNom();
                    consultarNom();
                    nuevaNom();
                }

            } else {
                JOptionPane.showMessageDialog(null, "El empleado no tiene préstamos pendientes");
                txtValD.setText("0");
                calcularNom();
            }
            // Cerrar el ResultSet y el PreparedStatement
            rs.close();
            pst.close();

            // Cerrar la conexión
            conect.close();
        } catch (Exception e) {
            System.out.println("error al agregar prestamo  ");
        }

    }

//------------------------------------------------------------------------------------------------------------------------------
    //consulta en la base de datos y muestra en la tabla de la interfaz    
    void consultarNom() {
        String sql = "SELECT E.nomEmple,N.valorDedu,N.fechaN,N.totalN FROM nominae as N INNER JOIN empleados as E ON N.idEmple = E.idEmple;";

        try {
            System.out.println("Estableciendo conexión...");
            conect = con1.getConnection();
            System.out.println("Conexión establecida.");

            // Verificar si la conexión está abierta
            if (conect == null || conect.isClosed()) {
                throw new IllegalStateException("La conexión no está abierta.");
            }

            st = conect.createStatement();
            rs = st.executeQuery(sql);
            System.out.println("Consulta ejecutada.");

            Object[] datos = new Object[4];
            DefaultTableModel modelo = (DefaultTableModel) jTableNom.getModel();

            while (rs.next()) {
                datos[0] = rs.getString("E.nomEmple");
                datos[1] = rs.getInt("N.valorDedu");
                datos[2] = rs.getString("N.fechaN");
                datos[3] = rs.getInt("N.totalN");

                modelo.addRow(datos);
            }
        } catch (Exception e) {
            System.err.println("Error al obtener datos: " + e.getMessage());
        } finally {
            // Cierre de recursos en el bloque finally
            try {
                if (rs != null) {
                    rs.close();
                    System.out.println("ResultSet cerrado.");
                }
                if (st != null) {
                    st.close();
                    System.out.println("Statement cerrado.");
                }
                if (conect != null) {
                    conect.close();
                    System.out.println("Conexión cerrada.");
                }
            } catch (Exception e) {
                System.err.println("Error al cerrar los recursos: " + e.getMessage()); //e.getMessage: nos da información del posible error.
            }
        }
    }
    
 //-------------------------------------------------------------------------------------------------------------------------------     
    
    
    void limpiarTablaNom() {
//        for (int i = 0; i <= jTableNom.getRowCount(); i++) {
//            modelo.removeRow(i);
//            i = i - 1;
//        }
        
//         Limpiar la tabla de otra forma 
        DefaultTableModel model = (DefaultTableModel) jTableNom.getModel();
        model.setRowCount(0); // Esto eliminará todas las filas de la tabla
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MenuEmple;
    private javax.swing.JMenu MenuPres;
    private javax.swing.JButton btnCalcu;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNew;
    private javax.swing.JComboBox<String> cbEmple;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableNom;
    private javax.swing.JTextArea txtAResult;
    private javax.swing.JTextField txtCantP;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtValD;
    private javax.swing.JTextField txtValPar;
    // End of variables declaration//GEN-END:variables
}
