/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

/**
 *
 * @author jeff_
 */
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

import crud_Taller.conexion;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.awt.Image;//librerias para cambiar la imagen de icono
import java.awt.Toolkit; //librerias para cambiar la imagen de icono

public class PrestamosT extends javax.swing.JFrame {

    conexion con1 = new conexion();
    Connection conect;
    DefaultTableModel modelo;
    Statement st;
    ResultSet rs;

    /**
     * Creates new form PrestamosT
     */
    public PrestamosT() {
        initComponents();
        actualizarFecha();
        rellenarCB();
        consultar();
        setSize(900, 700);
        setResizable(false);
        setTitle("Prestamos");
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void actualizarFecha() {
        LocalDateTime ahora = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd ");
        String fechaTexto = ahora.format(formatter);
        txtFecha.setText(fechaTexto);
    }

    @Override
    public Image getIconImage(){
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Vistas/logo-Zapato.jpg"));
        return retValue;
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbEmple = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtValPres = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnDesconP = new javax.swing.JButton();
        btnAgreP = new javax.swing.JButton();
        btnVer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablePrest = new javax.swing.JTable();
        txtFecha = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuNomi = new javax.swing.JMenu();
        MenuEmple = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Arial Black", 2, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 0));
        jLabel1.setText("Prestamos");

        cbEmple.setBackground(new java.awt.Color(204, 204, 204));
        cbEmple.setForeground(new java.awt.Color(0, 0, 0));
        cbEmple.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cbEmple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEmpleActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Cedula del Empleado:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Fecha:");

        txtValPres.setBackground(new java.awt.Color(204, 204, 204));
        txtValPres.setForeground(new java.awt.Color(0, 0, 0));
        txtValPres.setText("0");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Valor:");

        btnDesconP.setBackground(new java.awt.Color(255, 51, 51));
        btnDesconP.setForeground(new java.awt.Color(255, 255, 255));
        btnDesconP.setText("Descontar");
        btnDesconP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDesconP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesconPActionPerformed(evt);
            }
        });

        btnAgreP.setBackground(new java.awt.Color(255, 204, 0));
        btnAgreP.setForeground(new java.awt.Color(0, 0, 0));
        btnAgreP.setText("Agregar");
        btnAgreP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgreP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgrePActionPerformed(evt);
            }
        });

        btnVer.setBackground(new java.awt.Color(51, 51, 51));
        btnVer.setForeground(new java.awt.Color(255, 215, 0));
        btnVer.setText("Actualizar Tabla");
        btnVer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerActionPerformed(evt);
            }
        });

        TablePrest.setBackground(new java.awt.Color(204, 204, 204));
        TablePrest.setForeground(new java.awt.Color(0, 0, 0));
        TablePrest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Cedula", "Valor Prestamo", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablePrest);

        txtFecha.setBackground(new java.awt.Color(204, 204, 204));
        txtFecha.setForeground(new java.awt.Color(0, 0, 0));
        txtFecha.setText("0-0-0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(82, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtValPres, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbEmple, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(93, 93, 93))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAgreP, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnVer)
                            .addComponent(btnDesconP, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(354, 354, 354)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbEmple, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtValPres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDesconP, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgreP, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(99, 99, 99)
                        .addComponent(btnVer, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE))
                .addGap(69, 69, 69))
        );

        jMenuBar1.setForeground(new java.awt.Color(255, 255, 255));

        MenuNomi.setForeground(new java.awt.Color(0, 0, 0));
        MenuNomi.setText("Nomina");
        MenuNomi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuNomiMouseClicked(evt);
            }
        });
        MenuNomi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuNomiActionPerformed(evt);
            }
        });
        jMenuBar1.add(MenuNomi);

        MenuEmple.setForeground(new java.awt.Color(0, 0, 0));
        MenuEmple.setText("Empleados");
        MenuEmple.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuEmpleMouseClicked(evt);
            }
        });
        MenuEmple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuEmpleActionPerformed(evt);
            }
        });
        jMenuBar1.add(MenuEmple);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuNomiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuNomiActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_MenuNomiActionPerformed

    private void MenuEmpleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuEmpleActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_MenuEmpleActionPerformed

    private void MenuNomiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuNomiMouseClicked
        // TODO add your handling code here:
        Nomina vistaNomina = new Nomina();
        vistaNomina.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MenuNomiMouseClicked

    private void MenuEmpleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuEmpleMouseClicked
        // TODO add your handling code here:
        Empleados vistaEmpleados = new Empleados();
        vistaEmpleados.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MenuEmpleMouseClicked

    private void cbEmpleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEmpleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbEmpleActionPerformed

    private void btnAgrePActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgrePActionPerformed
        agregarPres();
        limpiarTabla();
        consultar();
    }//GEN-LAST:event_btnAgrePActionPerformed

    private void btnVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerActionPerformed
        limpiarTabla();
        consultar();
    }//GEN-LAST:event_btnVerActionPerformed

    private void btnDesconPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesconPActionPerformed
        descontarPres();
        limpiarTabla();
        consultar();
    }//GEN-LAST:event_btnDesconPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrestamosT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrestamosT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrestamosT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrestamosT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrestamosT().setVisible(true);
            }
        });

    }

    
    //-------------------------------------------------------------------------------------------------------------------------------     
    //metodo para rellenar el combo box con los id de los trabajadores registrados    
    void rellenarCB() {

        try {
            String sql = "SELECT idEmple FROM empleados";
//              String consulta = "SELECT id_empleado FROM empleados";
            conect = con1.getConnection();
            st = conect.createStatement();
            rs = st.executeQuery(sql);
            while (rs.next()) {
                int idEmpleado = rs.getInt("idEmple");
                cbEmple.addItem(Integer.toString(idEmpleado));
            }

        } catch (Exception e) {
            // Manejar la excepción (por ejemplo, imprimir un mensaje de error)
            System.err.println("Error al obtener datos de empleados: " + e.getMessage());
        }
    }

    
//------------------------------------------------------------------------------------------------------------------------------
    //consulta en la base de datos y muestra en la tabla de la interfaz    
void consultar() {
    String sql = "SELECT E.nomEmple ,E.idEmple ,P.valorP ,P.fecha FROM empleados as E INNER JOIN prestamos as P ON P.idEmple = E.idEmple;";


    try {
        System.out.println("Estableciendo conexión...");
        conect = con1.getConnection();
        System.out.println("Conexión establecida.");

              // Verificar si la conexión está abierta
        if (conect == null || conect.isClosed()) {
            throw new IllegalStateException("La conexión no está abierta.");
        }
        
        st = conect.createStatement();
        rs = st.executeQuery(sql);
        System.out.println("Consulta ejecutada.");

        Object[] datos = new Object[4];
        DefaultTableModel modelo = (DefaultTableModel) TablePrest.getModel();

        while (rs.next()) {
            datos[0] = rs.getString("E.nomEmple");
            datos[1] = rs.getInt("E.idEmple");
            datos[2] = rs.getInt("P.valorP");
            datos[3] = rs.getString("P.fecha");

            modelo.addRow(datos);
        }
    } catch (Exception e) {
        System.err.println("Error al obtener datos: " + e.getMessage());
    } finally {
        // Cierre de recursos en el bloque finally
        try {
            if (rs != null) {
                rs.close();
                System.out.println("ResultSet cerrado.");
            }
            if (st != null) {
                st.close();
                System.out.println("Statement cerrado.");
            }
            if (conect != null) {
                conect.close();
                System.out.println("Conexión cerrada.");
            }
        } catch (Exception e) {
            System.err.println("Error al cerrar los recursos: " + e.getMessage()); //e.getMessage: nos da información del posible error.
        }
    }
}


//-------------------------------------------------------------------------------------------------------------------------------     
    //metodo para  añadir prestamos
    void agregarPres() {

        String idString = (String) cbEmple.getSelectedItem();
        if (idString.equals("") || idString == null) {
            JOptionPane.showMessageDialog(null, "Seleccione un empleado" + idString);
            return;
        }

        int id = Integer.parseInt(idString);
        String fecha = txtFecha.getText();
        String valorString = txtValPres.getText();

        if (fecha.isEmpty() || valorString.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Faltan datos por agregar" + idString);
            return;
        }

        int valor = Integer.parseInt(valorString);
        boolean encontro = false;
        int valorExistente = 0;

        try {
            String sql0 = "SELECT idEmple,valorP FROM prestamos WHERE idemple = ?";
            conect = con1.getConnection();
            PreparedStatement pst = conect.prepareStatement(sql0);
            pst.setInt(1, id);
            rs = pst.executeQuery();
            //rs.next() es un método utilizado en Java cuando se trabaja con ResultSet para interactuar con bases de datos. 
            //ResultSet es una interfaz que representa un conjunto de resultados de una consulta a una base de datos. 
//            El método next() se usa para mover el cursor del ResultSet al siguiente registro.

            while (rs.next()) {
                // Asigna el valor de la columna 'valorP' a 'valorExistente'
                encontro = true;
                valorExistente = rs.getInt("valorP");
            }

            if (encontro) {
                int nuevoValor = valorExistente + valor;
                String sqlUpdate = "UPDATE prestamos SET fecha = ?,valorP = ? WHERE idEmple = ?";
                pst = conect.prepareStatement(sqlUpdate);
                pst.setString(1, fecha);
                pst.setInt(2, nuevoValor);
                pst.setInt(3, id);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Préstamo Actualizado");
//             
            } else {
                String sqlInsert = "INSERT INTO prestamos (fecha,valorP,idEmple) values (?,?,?)";
                pst = conect.prepareStatement(sqlInsert);
                pst.setString(1, fecha);
                pst.setInt(2, valor);
                pst.setInt(3, id);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Se guardó un préstamo nuevo");
            }
            // Cerrar el ResultSet y el PreparedStatement
            rs.close();
            pst.close();

            // Cerrar la conexión
            conect.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al agregar prestamo ");
        }
    }
    
//-------------------------------------------------------------------------------------------------------------------------------
    
         //metodo para  decontar  prestamos
    void descontarPres() {

        String idString = (String) cbEmple.getSelectedItem();
        if (idString.equals("")) {
            JOptionPane.showMessageDialog(null, "Seleccione un empleado" );
            return;
        }

        int id = Integer.parseInt(idString);
        String fecha = txtFecha.getText();
        String valorString = txtValPres.getText();

        if (fecha.isEmpty() || valorString.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Faltan datos por agregar" );
            return;
        }

        int valor = Integer.parseInt(valorString);
        boolean encontro = false;
        int valorExistente = 0;

        try {
            String sql0 = "SELECT idEmple,valorP FROM prestamos WHERE idemple = ?";
            conect = con1.getConnection();
            PreparedStatement pst = conect.prepareStatement(sql0);
            pst.setInt(1, id);
            rs = pst.executeQuery();
            //rs.next() es un método utilizado en Java cuando se trabaja con ResultSet para interactuar con bases de datos. 
            //ResultSet es una interfaz que representa un conjunto de resultados de una consulta a una base de datos. 
//            El método next() se usa para mover el cursor del ResultSet al siguiente registro.

            while (rs.next()) {
                // Asigna el valor de la columna 'valorP' a 'valorExistente'
                encontro = true;
                valorExistente = rs.getInt("valorP");
            }

            if (encontro) {
                int nuevoValor = valorExistente - valor;
                
                if (nuevoValor < 0){
                    JOptionPane.showMessageDialog(null,"Saldo insufiente Para realizar descuento del prestamo");
                }else if (nuevoValor == 0){
                    String sqlDel = "DELETE FROM prestamos WHERE idEmple = ?";
                    pst = conect.prepareStatement(sqlDel);
                    pst.setInt(1, id);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null,"El empreado se elimino de la lista de prestamos");
                    
                }else{
                    String sqlUpdate = "UPDATE prestamos SET fecha = ?,valorP = ? WHERE idEmple = ?";
                    pst = conect.prepareStatement(sqlUpdate);
                    pst.setString(1, fecha);
                    pst.setInt(2, nuevoValor);
                    pst.setInt(3, id);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Préstamo Actualizado");
                }   
                
            } else {
                JOptionPane.showMessageDialog(null, "El empreado no tiene deudas pendientes");
            }
            // Cerrar el ResultSet y el PreparedStatement
            rs.close();
            pst.close();

            // Cerrar la conexión
            conect.close();
        } catch (Exception e) {
            System.out.println("error al agregar prestamo  " + e.getMessage()); //e.getMessage() : nos da información del posible error.
        }
    }
    
    
    
        //-------------------------------------------------------------------------------------------------------------------------------     
    
    
    void limpiarTabla() {
//        for (int i = 0; i <= TableServ.getRowCount(); i++) {
//            modelo.removeRow(i);
//            i = i - 1;
//        }
        
        // Limpiar la tabla de otra forma 
        DefaultTableModel model = (DefaultTableModel) TablePrest.getModel();
        model.setRowCount(0); // Esto eliminará todas las filas de la tabla
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MenuEmple;
    private javax.swing.JMenu MenuNomi;
    private javax.swing.JTable TablePrest;
    private javax.swing.JButton btnAgreP;
    private javax.swing.JButton btnDesconP;
    private javax.swing.JButton btnVer;
    private javax.swing.JComboBox<String> cbEmple;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtValPres;
    // End of variables declaration//GEN-END:variables
}
